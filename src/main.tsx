// ‚úÖ src/main.tsx ‚Äî Production-ready with Suspense fallback and externalized FallbackLoading

import React, { Suspense } from 'react';
import ReactDOM from 'react-dom/client';
import AppRouter from './Router/AppRouter';
import './index.css';
import FallbackLoading from '@/Home/common/FallbackLoading'; // ‚úÖ ‡πÉ‡∏ä‡πâ component ‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á

/**
 * üéØ Entry point ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ JP Visual & Docs
 * - ‡πÉ‡∏ä‡πâ React 18 concurrent renderer
 * - ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ <Suspense> ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö dynamic import
 * - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö fallback UI ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á lazy loading
 */

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <Suspense fallback={<FallbackLoading />}>
      <AppRouter />
    </Suspense>
  </React.StrictMode>
);
