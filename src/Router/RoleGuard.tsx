// ‚úÖ src/Router/RoleGuard.tsx ‚Äî Production-Ready Role-Based Route Protection

import { Navigate, Outlet } from 'react-router-dom';

/**
 * üîê Role Types ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 */
type Role = 'admin' | 'editor' | 'user';

/**
 * ‚úÖ RoleGuard
 * - ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå (RBAC)
 * - ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ role ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå => redirect
 */
interface RoleGuardProps {
  allowedRoles: Role[];
  userRole: Role | null;
}

const RoleGuard = ({ allowedRoles, userRole }: RoleGuardProps) => {
  // ‚úÖ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ role (‡πÄ‡∏ä‡πà‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login) ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
  if (!userRole) {
    return <Navigate to="/login" replace />;
  }

  // ‚úÖ ‡∏°‡∏µ role ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Unauthorized
  if (!allowedRoles.includes(userRole)) {
    return <Navigate to="/unauthorized" replace />;
  }

  // ‚úÖ ‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‚Üí ‡πÅ‡∏™‡∏î‡∏á Outlet ‡∏ó‡∏µ‡πà match route
  return <Outlet />;
};

export default RoleGuard;
