// ‚úÖ src/Router/GuardRoutes.tsx ‚Äî Protected Route Wrapper (Auth Guard)

import { Navigate, Outlet, useLocation } from 'react-router-dom';

/**
 * üîê Mock Auth (‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Zustand/Auth Context ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á)
 */
const useAuth = () => {
  const user = {
    isAuthenticated: true, // ‚ùó ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô false ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏≠‡∏á redirect
    role: 'user', // ex: 'admin', 'editor', 'user'
  };
  return user;
};

/**
 * ‚úÖ GuardRoutes
 * - ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô route ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login
 * - redirect ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (state.from) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏±‡∏á login
 */
const GuardRoutes = () => {
  const { isAuthenticated } = useAuth();
  const location = useLocation();

  // ‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login ‚Üí redirect ‡πÑ‡∏õ /login ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ
  if (!isAuthenticated) {
    return <Navigate to="/login" replace state={{ from: location }} />;
  }

  // ‚úÖ login ‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÅ‡∏™‡∏î‡∏á Outlet (children route)
  return <Outlet />;
};

export default GuardRoutes;
